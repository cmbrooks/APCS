/**
 *
 * This class implements the American Soundex phonetic algorithm as
 * described in  http://en.wikipedia.org/wiki/Soundex
 *
 */
public class AmericanSoundex {

    /**
     * This method returns the American Soundex code for a given String name.
     *
     * The Soundex code for a name consists of a letter followed by three numerical digits:
     * the letter is the first letter of the name, and the digits encode the remaining
     * consonants. Similar sounding consonants share the same digit so, for example,
     * the labial consonants B, F, P, and V are each encoded as the number 1.
     *
     *    The correct value can be found as follows:
     *
     *    1. Retain the first letter of the name and drop all other occurrences of
     *     a, e, i, o, u, y, h, w.
     *  2. Replace consonants with digits as follows (after the first letter):
     *     b, f, p, v -> 1
     *     c, g, j, k, q, s, x, z -> 2
     *     d, t -> 3
     *     l -> 4
     *     m, n -> 5
     *     r -> 6
     *  3. If two or more letters with the same number are adjacent in the original
     *     name (before step 1), only retain the first letter; also two letters with
     *     the same number separated by 'h' or 'w' are coded as a single number,
     *     whereas such letters separated by a vowel are coded twice. This rule also
     *     applies to the first letter.
     *  4. Iterate the previous step until you have one letter and three numbers.
     *     If you have too few letters in your word that you can't assign three numbers,
     *     append with zeros until there are three numbers. If you have more than 3 letters,
     *     just retain the first 3 numbers.
     *
     *
     * @param name - a String name to be encoded using the American Soundex algorithm
     * @return - a String soundex code
     */
    public static String getSoundex( String name ) {
        String soundex = "";

        name = name.toLowerCase();

        // Step 1 Flag the vowel letters
        boolean[] isVowels = new boolean[name.length()];

        for (int i = 0; i < name.length(); i++) {
            char c = name.charAt(i);
            if ('a' == c || 'e' == c || 'i' == c || 'o' == c || 'u' == c
                    || 'y' == c) {
                isVowels[i] = true;
            } else {
                isVowels[i] = false;
            }
        }

        // Step 2 Encode the letters
        for (int i = 0; i < name.length(); i++) {
            char c = name.charAt(i);
            int code = 0;

            if ('a' == c || 'e' == c || 'i' == c || 'o' == c || 'u' == c
                    || 'y' == c || 'h' == c || 'w' == c) {

                // drop vowels and h and w
                if (i == 0) {
                    // this will be replaced with the first letter
                    code = 9;
                }
            } else if ('b' == c || 'f' == c || 'p' == c || 'v' == c) {
                code = 1;
            } else if ('c' == c || 'g' == c || 'j' == c || 'k' == c || 'q' == c
                    || 's' == c || 'x' == c || 'z' == c) {
                code = 2;
            } else if ('d' == c || 't' == c) {
                code = 3;
            } else if ('l' == c) {
                code = 4;
            } else if ('m' == c || 'n' == c) {
                code = 5;
            } else if ('r' == c) {
                code = 6;
            }

            // Step 3 Check duplicate code
            if (code > 0) {
                if (soundex.length() > 0
                        && soundex.substring(soundex.length() - 1, soundex.length()).equals(String.valueOf(code))) {

                    if (isVowels[i - 1]) {
                        soundex += String.valueOf(code);
                    }

                } else {
                    soundex += String.valueOf(code);
                }
            }
        }

        // Retain the first letter
        soundex = name.substring(0, 1).toUpperCase() + soundex.substring(1, soundex.length());

        // Step 4
        // Pad short soundex code with 0
        while (soundex.length() < 4) {
            soundex += String.valueOf(0);
        }

        // Drop extra code from long soundex
        if (soundex.length() > 4) {
            soundex = soundex.substring(0, 4);
        }

        return soundex;
    }
}