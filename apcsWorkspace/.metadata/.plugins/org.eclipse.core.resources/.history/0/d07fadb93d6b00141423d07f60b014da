/*
Cody Brooks
2014-11-12
*/

public class matrixmath {

  public static void main (String[] args){
	  int[][] A = {
			  		  {2,5,7},
					  {7,3,9},
					  {7,2,8}
	  			  };
	  int p = 2;
	  
	  if (MatMath.checkMatSize(A)){
		  System.out.println("A is a valid Matrix");
	  } else {
		  System.out.println("A is not a valid Matrix");
	  }
	  
	  int[][] resultArray = MatMath.mult(A, p);
	  
	  /*Print the result array*/
	  System.out.println("Scalar addition of A + p:");
	  for (int i = 0; i < resultArray.length; i++) {
		  for (int j = 0; j < resultArray[0].length; j++) {
			  System.out.print("\t" + resultArray[i][j]);
		  }
		  System.out.println();
	  }
	  
  }

}

class MatMath {

	/*Scalar Addition*/
	static int [][] add (int p, int[][] A){
	    int[][] result = new int[A.length][A[0].length];
		if (checkMatSize(A)){
		    for (int i = 0; i < A.length; i++) {
		      for (int j = 0; j < A[i].length; j++) {
		        result[i][j] = p + A[i][j];
		      }
		    }
		} else {
			System.out.println("The input A is not a valid matrix");
			//Throw an exception
		}

    return result;
	}

  /*Scalar Addition*/
  static int [][] add (int[][] A, int p){
    int[][] result = new int[A.length][A[0].length];
	if (checkMatSize(A)){
	    for (int i = 0; i < A.length; i++) {
	      for (int j = 0; j < A[i].length; j++) {
	        result[i][j] = p + A[i][j];
	      }
	    }
	} else {
		System.out.println("The input A is not a valid matrix");
		//Throw an exception
	}

	return result;
  }

  /*Scalar Multiplication*/
  static int [][] mult (int p, int[][] A){
    int[][] result = new int[A.length][A[0].length];
	if (checkMatSize(A)){
	    for (int i = 0; i < A.length; i++) {
	      for (int j = 0; j < A[i].length; j++) {
	        result[i][j] = p * A[i][j];
	      }
	    }
	} else {
		System.out.println("The input A is not a valid matrix");
		//Throw an exception
	}

	return result;
  }

  /*Scalar Multiplication*/
  static int [][] mult (int[][] A, int p){
    int[][] result = new int[A.length][A[0].length];
	if (checkMatSize(A)){
	    for (int i = 0; i < A.length; i++) {
	      for (int j = 0; j < A[i].length; j++) {
	        result[i][j] = p * A[i][j];
	      }
	    }
	} else {
		System.out.println("The input A is not a valid matrix");
		//Throw an exception
	}

	return result;
  }

  /*Matrix Addition*/
  static int [][] add (int[][] A, int[][] B){
	int[][] result = new int[A[0].length][B.length];
    for (int i = 0; i < A.length; i++) {
        for (int j = 0; j < A[i].length; j++) {
          /*Perform Matrix multiplication here*/
        }
      }
	  return result;
  }

  /*Matrix Multiplication*/
  static int [][] mult (int[][] A, int[][] B){
	int[][] result = new int[A[0].length][B.length];
    for (int i = 0; i < A.length; i++) {
        for (int j = 0; j < A[i].length; j++) {
          /*Perform Matrix addition here*/
        }
      }
	  return result;
  }
  
  static boolean checkMatSize (int [][] A) {
	  /*Ensures that the given matrix has a valid size*/
	  boolean result = false;
	  
	  for (int i = 0; i < A.length; i++) {
		  if (A[i].length == A[0].length) {
			  result = true;
		  } else {
			  result = false;
		  }
	  }
	  
	  return result;
  }

}
